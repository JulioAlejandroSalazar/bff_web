spring.application.name=bff-web
server.port=8443

# SSL
server.ssl.enabled=true
server.ssl.key-store=classpath:bff-keystore.p12
server.ssl.key-store-password=password
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=bff

# Config Server
spring.config.import=optional:configserver:http://35.168.205.99:8888

# Eureka
eureka.client.serviceUrl.defaultZone=http://35.168.205.99:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.healthcheck.enabled=true

# kafka
spring.kafka.bootstrap-servers=host.docker.internal:29092,host.docker.internal:39092
spring.kafka.consumer.group-id=grupo-bff-web
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.topic.transacciones=transacciones-eventos

# resilience4j circuit breaker
resilience4j.circuitbreaker.instances.transaccionService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.transaccionService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.transaccionService.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.transaccionService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.transaccionService.waitDurationInOpenState=5s

# resilience4j retry
resilience4j.retry.instances.transaccionService.maxAttempts=3
resilience4j.retry.instances.transaccionService.waitDuration=2s
